---
- name: Executing node playbook
  hosts: all
  gather_facts: true
  become: yes
  become_method: sudo 

  vars:
    node_repo_rpm: "https://rpm.nodesource.com/pub_12.x/el/7/x86_64/nodesource-release-el7-1.noarch.rpm"
    node_string_services: ""

  environment:
    PATH: /usr/bin:/bin:/usr/sbin:/sbin
  
  tasks:
    - name: desactive http in public zone
      firewalld:
        zone: public
        service: http
        permanent: true
        state: enabled

    - name: active https in public zone
      firewalld:
        zone: public
        service: https
        permanent: true
        state: enabled
        
    - name: restart firewalld
      service:
        name: firewalld
        state: restarted

    - name: add repository node
      package:
        name: "{{ node_repo_rpm }}"
        state: present

    - name: install packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - "nodejs"
        - "ntp"
    
    - name: set timezone
      timezone:
        name: "America/Sao_Paulo"
    
    - name: start ntp daemon
      service:
        name: "{{ ntp_daemon }}"
        state: started
        enabled: true
    
    - name: create node_app directory
      file:
        path: "/home/{{ ansible_user }}/node_app"
        state: directory
        mode: '0755'
    
    - name: copy app files
      copy:
        src: "files/{{ item }}"
        dest: "/home/{{ ansible_user }}/node_app/{{ item }}"
        mode: 0644
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      with_items:
        - "package.json"
        - "app.js"
    
    - name: copy script log_parse.sh
      copy:
        src: "files/log_parse.sh"
        dest: "/usr/bin/log_parse.sh"
        mode: 0755
    
    - name: create cron to execute log_parse.sh
      cron:
        name: "execute log_parse.sh"
        minute: "0"
        hour: "22"
        job: "/usr/bin/log_parse.sh"
    
    - name: Install npm packages 
      npm:
        path: "/home/{{ ansible_user }}/node_app"
        
    - name: create services in systemd
      template:
        src: templates/node_app_service.j2
        dest: "/etc/systemd/system/{{ item }}.service"
        mode: 0644
        owner: "root"
        group: "root"
      with_sequence: start=0 end="{{ ansible_processor_vcpus | int - 1 }}" format=node_app@300%1x
    
    - set_fact: 
        node_string_services: "{{ node_string_services + ' ' + item }}"
      with_sequence: start=0 end="{{ ansible_processor_vcpus | int - 1 }}" format=node_app@300%1x.service

    - name: create target in systemd
      template:
        src: templates/node_app_target.j2
        dest: "/etc/systemd/system/node_app.target"
        mode: 0644
        owner: "root"
        group: "root"
    
    - name: enable target node_app and start
      systemd:
        name: node_app.target
        enabled: yes
        state: started
        daemon_reload: yes
    
    - import_tasks: nginx.yaml
    