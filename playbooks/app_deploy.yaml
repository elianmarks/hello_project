---
- name: Executing app deploy playbook
  hosts: all
  gather_facts: true
  become: yes
  become_method: sudo 

  vars:
    app_path: "/home/{{ ansible_user }}/{{ app_name }}"
    old_release_path: "/home/{{ ansible_user }}/old_release"

  environment:
    PATH: /usr/bin:/bin:/usr/sbin:/sbin
  
  tasks:
    - name: app deploy
      block:
        - name: create old_release directory if not exists
          file:
            dest: "{{ old_release_path }}"
            mode: 0755
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            state: directory
        
        - name: stat package.json
          stat:
            path: "{{ app_path }}/package.json"
          register: stat_local_package_json
        
        - name: copy current release to old_release
          copy: 
            remote_src: true
            src: "{{ app_path }}/{{ item }}"
            dest: "{{ old_release_path }}/{{ item }}"
          with_items:
            - "package.json"
            - "app.js"

        - name: copy app files
          copy:
            src: "files/{{ item }}"
            dest: "{{ app_path }}/{{ item }}"
            mode: 0644
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
          with_items:
            - "package.json"
            - "app.js"
        
        - name: stat package.json
          stat:
            path: "{{ app_path }}/package.json"
          register: stat_package_json
        
        - name: Install npm packages 
          npm:
            path: "/home/{{ ansible_user }}/{{ app_name }}"
          when: stat_local_package_json.stat.checksum != stat_package_json.stat.checksum
        
        - import_tasks: node_testing.yaml

        - name: restart others services
          service:
            name: "{{ item }}"
          with_sequence: start=1 end="{{ ansible_processor_vcpus | int - 1 }}" format="{{ app_name }}@300%1x"
          when: ansible_processor_vcpus > 0

      rescue:      
        - name: copy old release to production
          copy: 
            remote_src: true
            src: "{{ old_release_path }}/{{ item }}"
            dest: "{{ app_path }}/{{ item }}"
          with_items:
            - "package.json"
            - "app.js"
          when: (result_wait is defined and result_wait.failed) or (result_check_start is defined and result_check_start.failed)
        
        - import_tasks: node_testing.yaml
